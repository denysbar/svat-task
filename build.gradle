plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

group = 'svat-task'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework:spring-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.kafka:spring-kafka'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	compileOnly 'org.projectlombok:lombok:1.18.32'
	implementation 'org.projectlombok:lombok:1.18.32'
	implementation 'com.mysql:mysql-connector-j:8.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-web:3.2.5'
	implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok:1.+'
	annotationProcessor 'org.projectlombok:lombok:1.+'
	testAnnotationProcessor 'org.projectlombok:lombok:1.+'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'javax.servlet:javax.servlet-api:3.1.0'

}

jacoco {
	toolVersion = '0.8.11'
}

tasks.named('test') {
	useJUnitPlatform()
	jacoco {
		enabled = true
	}
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}
